imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr

framework:
    #esi:             ~
    translator:       ~
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }
# app/config/config.yml
fos_user:
    db_driver: orm
    firewall_name: main
    user_class: AppBundle\Entity\User

twig:
    form:
        resources:
            - LexikFormFilterBundle:Form:form_div_layout.html.twig

    # la configuration si les recherches sont sensibles à la casse de caractères,
    lexik_form_filter:
      force_case_insensitivity: false
      where_method: ~  # null | and | or

knp_paginator:
    page_range: 5                      # default page range used in pagination control
    default_options:
        page_name: page                # page query parameter name
        sort_field_name: sort          # sort field query parameter name
        sort_direction_name: direction # sort direction query parameter name
        distinct: true                 # ensure distinct results, useful when ORM queries are using GROUP BY statements
    template:
        pagination: KnpPaginatorBundle:Pagination:twitter_bootstrap_v3_pagination.html.twig
        sortable: KnpPaginatorBundle:Pagination:sortable_link.html.twig # sort link template



easy_admin:
    list:
        max_results: 5
    site_name: ' <em style="font-size: 80%;">OB.</em>'
    #couleur de la template
    #design:
    #        brand_color: '#1ABC9C'
    formats:
            date:     'd/m/Y'
            time:     'H:i'
            datetime: 'd/m/Y H:i:s'
    entities:
            User:
                class: AppBundle\Entity\User
                label: 'Utilisateurs'
                form:
                    fields:
                        - username
                        - { property: 'email', label: 'Email' }
                        - enabled
                        - lastLogin
                        # if administrators are allowed to edit users' passwords and roles, add this:
                        - { property: 'plainPassword', type: 'text', type_options: { required: false } }
                        - { property: 'roles', type: 'choice', type_options: { multiple: true, choices: { 'ROLE_USER': 'ROLE_USER', 'ROLE_ADMIN': 'ROLE_ADMIN' } } }
                edit:
                                fields:
                                    # ...
                                    - { property: 'plainPassword', type_options: { required: false} }
                                    # ...
                                form_options: { validation_groups: ['Profile'] }
                new:
                                fields:
                                    # ...
                                    - { property: 'plainPassword', type_options: { required: true} }
                                    # ...
                                form_options: { validation_groups: ['Registration'] }

            Article:
                list:
                # if the sort order is not specified, 'DESC' zis used
                  sort: 'createdAt'

                class:    AppBundle\Entity\Article
                form:
                                fields: ['title','auteur','content']


